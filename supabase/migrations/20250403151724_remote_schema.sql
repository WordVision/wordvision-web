create table "public"."highlights" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid not null,
    "book_id" uuid not null,
    "text" text not null,
    "location" text not null,
    "img_url" text,
    "img_prompt" text
);


alter table "public"."highlights" enable row level security;

alter table "public"."books" add column "img_url" text;

alter table "public"."user_books" alter column "created_at" set default now();

CREATE UNIQUE INDEX highlights_pkey ON public.highlights USING btree (id);

alter table "public"."highlights" add constraint "highlights_pkey" PRIMARY KEY using index "highlights_pkey";

alter table "public"."highlights" add constraint "highlights_book_id_fkey" FOREIGN KEY (book_id) REFERENCES books(id) not valid;

alter table "public"."highlights" validate constraint "highlights_book_id_fkey";

alter table "public"."highlights" add constraint "highlights_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."highlights" validate constraint "highlights_user_id_fkey";

grant delete on table "public"."highlights" to "anon";

grant insert on table "public"."highlights" to "anon";

grant references on table "public"."highlights" to "anon";

grant select on table "public"."highlights" to "anon";

grant trigger on table "public"."highlights" to "anon";

grant truncate on table "public"."highlights" to "anon";

grant update on table "public"."highlights" to "anon";

grant delete on table "public"."highlights" to "authenticated";

grant insert on table "public"."highlights" to "authenticated";

grant references on table "public"."highlights" to "authenticated";

grant select on table "public"."highlights" to "authenticated";

grant trigger on table "public"."highlights" to "authenticated";

grant truncate on table "public"."highlights" to "authenticated";

grant update on table "public"."highlights" to "authenticated";

grant delete on table "public"."highlights" to "service_role";

grant insert on table "public"."highlights" to "service_role";

grant references on table "public"."highlights" to "service_role";

grant select on table "public"."highlights" to "service_role";

grant trigger on table "public"."highlights" to "service_role";

grant truncate on table "public"."highlights" to "service_role";

grant update on table "public"."highlights" to "service_role";

create policy "Enable users to modify their own data only"
on "public"."highlights"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable insert for authenticated users only"
on "public"."user_books"
as permissive
for insert
to authenticated
with check (true);



